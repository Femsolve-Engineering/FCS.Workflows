name: Build C++ Project - Windows

on:
  workflow_call:
    inputs:
      releaseVersion:
        required: true
        type: string
      solutionFileName:
        required: true
        type: string
      upload_url:
        required: true
        type: string

jobs:
  build-and-archive:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v2

    - name: Set up MSBuild path
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Git LFS Pull
      run: git lfs pull

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
        
    - name: Restore NuGet packages
      run: dotnet restore ${{ inputs.solutionFileName }}.sln

    - name: Build .NET Core Project
      run: dotnet build BuildConfigs/PreRequisitesSetup/PreRequisitesSetup.csproj --configuration Release

    - name: Run .NET Core Project
      env:
        PRIVATE_ACCESS_TOKEN: ${{ secrets.INHERITED_ACCESS_TOKEN }}
      run: dotnet run --project BuildConfigs/PreRequisitesSetup/PreRequisitesSetup.csproj

    - name: Build solution
      run: msbuild ${{ inputs.solutionFileName }}.sln /p:Configuration=Release /p:Platform="x64"

    - name: Zip include headers
      run: Compress-Archive -Path .\x64\Release\include\* -DestinationPath headers.zip

    - name: Attach include headers to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        upload_url: ${{ inputs.upload_url }}
        asset_path: ./headers.zip
        asset_name: headers.zip
        asset_content_type: application/zip

    - name: Delete .exp, .pdb, and header files
      run: |
        Remove-Item -Path .\x64\Release\*.exp -Force -ErrorAction SilentlyContinue
        Remove-Item -Path .\x64\Release\*.pdb -Force -ErrorAction SilentlyContinue

    - name: Zip the binaries
      run: Compress-Archive -Path .\x64\Release\* -DestinationPath .\windows-x64-binaries.zip

    - name: Attach binaries to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        upload_url: ${{ inputs.upload_url }}
        asset_path: ./windows-x64-binaries.zip
        asset_name: windows-x64-binaries.zip
        asset_content_type: application/zip
