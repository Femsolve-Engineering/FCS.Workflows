name: Build C++ Project for PyPi - Linux

on:
  workflow_call:
    inputs:
      releaseVersion:
        required: true
        type: string
      shellScriptPath:
        required: true
        type: string
      shellScriptPostBuildPath:
        required: true
        type: string
      upload_url:
        required: true
        type: string
        
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: 'recursive'

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x' 
        
    - name: Build .NET Core Project
      run: dotnet build PreRequisitesSetup/PreRequisitesSetup.csproj --configuration Release

    - name: Run .NET Core Project
      env:
        PRIVATE_ACCESS_TOKEN: ${{ secrets.INHERITED_ACCESS_TOKEN }}
      run: dotnet run --project PreRequisitesSetup/PreRequisitesSetup.csproj

    - name: Git LFS Pull
      run: git lfs pull

    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y software-properties-common
        sudo apt-get install -y make gcc g++ wget python3.11 python3.11-dev python3.11-venv zip unzip libgl1 libfreeimage-dev libfreetype6-dev libfontconfig1-dev

    - name: Unzip and rename shared directory
      run: |
        unzip ./3rdParty/Shared-Debian64.zip -d ./3rdParty/
        mv ./3rdParty/GEOM.Vendor ./3rdParty/Shared

    - name: Build
      run: |
        chmod +x ${{ inputs.shellScriptPath }}
        ${{ inputs.shellScriptPath }}

    - name: Post-Build
      run: |
        chmod +x ${{ inputs.shellScriptPostBuildPath }}
        ${{ inputs.shellScriptPostBuildPath }}

    - name: Copy binaries to fcscore-package (PyPi)
      run: |
        mkdir -p ./fcscore-package/fcscore_package/
        cp -r ./x64/Release/* ./fcscore-package/fcscore
        
#    - name: Zip the binaries
#      run: zip -r ubuntu-x64-binaries.zip ./x64/Release

#    - name: Attach binaries to release
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.INHERITED_ACCESS_TOKEN }}
#      with:
#        token: ${{ secrets.INHERITED_ACCESS_TOKEN }}
#        upload_url: ${{ inputs.upload_url }}
#        asset_path: ./ubuntu-x64-binaries.zip
#        asset_name: ubuntu-x64-binaries.zip
#        asset_content_type: application/zip
        
    - name: Install pypa/setuptools 🐍
      run: >-
        python -m
        pip install wheel auditwheel twine
    - name: Update version in setup.py
      run: >-
        sed -i "s/{{VERSION_PLACEHOLDER}}/${{ inputs.releaseVersion }}/g" ./fcscore-package/setup.py
    - name: Build a binary wheel
      run: |
        python ./fcscore-package/setup.py bdist_wheel
        auditwheel repair ./fcscore-package/dist/*.whl --plat manylinux_2_24_x86_64 -w ./fcscore-package/dist/
        python -m twine upload ./fcscore-package/dist/*
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.INHERITED_PYPI_TOKEN }}
