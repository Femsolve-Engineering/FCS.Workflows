name: Build C++ Project for PyPi - Linux

on:
  workflow_call:
    inputs:
      releaseVersion:
        required: true
        type: string
      shellScriptPath:
        required: true
        type: string
      shellScriptPostBuildPath:
        required: true
        type: string
      upload_url:
        required: true
        type: string
        
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: 'recursive'

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x' 
        
    - name: Build .NET Core Project
      run: dotnet build PreRequisitesSetup/PreRequisitesSetup.csproj --configuration Release

    - name: Run .NET Core Project
      env:
        PRIVATE_ACCESS_TOKEN: ${{ secrets.INHERITED_ACCESS_TOKEN }}
      run: dotnet run --project PreRequisitesSetup/PreRequisitesSetup.csproj

    - name: Git LFS Pull
      run: git lfs pull

    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y software-properties-common
        sudo apt-get install -y make gcc g++ wget python3.11 python3.11-dev python3.11-venv zip unzip libgl1 libfreeimage-dev libfreetype6-dev libfontconfig1-dev

    - name: Unzip and rename shared directory
      run: |
        unzip ./3rdParty/Shared-Debian64.zip -d ./3rdParty/
        mv ./3rdParty/GEOM.Vendor ./3rdParty/Shared

    - name: Build
      run: |
        chmod +x ${{ inputs.shellScriptPath }}
        ${{ inputs.shellScriptPath }}

    - name: Post-Build
      run: |
        chmod +x ${{ inputs.shellScriptPostBuildPath }}
        ${{ inputs.shellScriptPostBuildPath }}

    - name: Copy binaries to fcscore-package (PyPi)
      run: |
        cp -r ./x64/Release/* ./fcscore-package/fcs_core_model_engine
        ls -alR ./fcscore-package/fcs_core_model_engine/
        
    - name: Install pypa/setuptools üêç
      run: |
        python3.11 -m pip install wheel twine
        
    - name: Update version in setup.py
      run: |
        echo "Release version = ${{ inputs.releaseVersion }}"
        sed -i "s/{{VERSION_PLACEHOLDER}}/${{ inputs.releaseVersion }}/g" ./fcscore-package/setup.py
        
    - name: Build binary wheel
      run: |
        cd ./fcscore-package
        python3.11 setup.py bdist_wheel --plat-name manylinux_2_24_x86_64
        
    - name: Publish distribution üì¶ to PyPI
      run: |
        cd ./fcscore-package
        python3.11 -m twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.INHERITED_PYPI_TOKEN  }}
