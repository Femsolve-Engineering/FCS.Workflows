name: Build C++ Project for PyPi - Windows

on:
  workflow_call:
    inputs:
      releaseVersion:
        required: true
        type: string
      solutionFileName:
        required: true
        type: string
      upload_url:
        required: true
        type: string

jobs:
  build-and-publish:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x' 

    - name: Install Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - run: |
        python -c "import sysconfig; print(sysconfig.get_path('include'))"
        python -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))"

    - name: Build .NET Core Project
      run: dotnet build PreRequisitesSetup/PreRequisitesSetup.csproj --configuration Release

    - name: Run .NET Core Project
      env:
         PRIVATE_ACCESS_TOKEN: ${{ secrets.INHERITED_ACCESS_TOKEN }}
      run: dotnet run --project PreRequisitesSetup/PreRequisitesSetup.csproj

    - name: Git LFS Pull
      run: git lfs pull

    - name: Set up MSBuild path
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build solution
      run: msbuild ${{ inputs.solutionFileName }}.sln /p:Configuration=Release /p:Platform="x64"

    - name: Copy binaries to fcscore-package (PyPi)
      run: |
        Copy-Item -Path "./x64/Release/*" -Destination "./fcscore-package/fcs_core_model_engine/" -Recurse -Force
     
    - name: Install pypa/setuptools üêç
      run: |
        python -m
        pip install wheel twine
        
    - name: Update version in setup.py
      run: |
        $releaseVersion = "${{ inputs.releaseVersion }}"
        echo "Release version = $releaseVersion"
        (Get-Content -path ./fcscore-package/setup.py).replace('{{VERSION_PLACEHOLDER}}', $releaseVersion) | Set-Content -Path ./fcscore-package/setup.py
      shell: pwsh

    - name: Build a binary wheel
      run: |
        cd ./fcscore-package
        python setup.py bdist_wheel --plat-name win_amd64
    
    - name: Publish distribution üì¶ to PyPI
      run: |
        cd ./fcscore-package
        python -m twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.INHERITED_PYPI_TOKEN  }}
